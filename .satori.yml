settings:
  name: Satori CLI Test
  log: slack

import:
  - "satori://code/trufflehog.yml"
  - "satori://code/semgrep-secrets.yml"
  #- "satori://code/semgrep.yml"
  #- "satori://code/python/pylint.yml"

tests:
  assertReturnCode: 0
  install_satori:
    test:
    - [ pip install . ]

  create_profile:
    assertStdoutContains: "Token saved"
    test:
    - [ satori-cli config token "not_a_token" -p test_user ]

  set_token:
    assertStdoutContains: "Token saved"
    test:
    - [ satori-cli config token "$(TOKEN)" ]

  dashboard:
    test:
    - [ satori-cli ]

  pass_report:
    test:
    - [ satori-cli run .satori/pass.yml --report ]

  import_sync:
    test:
    - [ satori-cli run .satori/import --sync ]

  run_url_output:
    test:
    - [ "satori-cli run satori://web/testssl.yml --data=\"{'URL':'https://www.satori-ci.com'}\" --output" ]

playbook:
  assertReturnCode: 0
  list:
    test:
    - [ satori-cli playbook ]

  list_public:
    test:
    - [ satori-cli playbook --public ]

  single:
    test:
    - [ satori-cli playbook $(REPORT_ID) ]

  delete:
    test:
    - [ satori-cli playbook $(REPORT_ID) delete ]

report:
  assertReturnCode: 0
  list:
    test:
    - [ satori-cli report ]

  single:
    test:
    - [ satori-cli report $(REPORT_ID) ]

  output:
    test:
    - [ satori-cli report $(REPORT_ID) output ]

  stop:
    test:
    - [ satori-cli report $(REPORT_ID) stop ]

  # delete:
  #   test:
  #   - [ satori-cli report $(REPORT_ID) delete ]

repo:
  assertReturnCode: 0
  list:
    test:
    - [ satori-cli repo ]

  single:
    test:
    - [ satori-cli repo satorici/satori-cli ]

  commits:
    test:
    - [ satori-cli repo satorici/satori-cli commits ]

  # check_commits:
  #   test:
  #   - [ satori-cli repo satorici/satori-cli check_commits ]

  # check_forks:
  #   test:
  #   - [ satori-cli repo satorici/satori-cli check_forks ]

  # scan:
  #   test:
  #   - [ satori-cli repo satorici/satori-cli scan ]

  # scan_stop:
  #   test:
  #   - [ satori-cli repo satorici/satori-cli scan-stop ]

  # run:
  #   test:
  #   - [ satori-cli repo satorici/satori-cli run ]

  # clean:
  #   test:
  #   - [ satori-cli repo satorici/satori-cli clean ]

monitor:
  assertReturnCode: 0
  list:
    test:
    - [ satori-cli monitor ]

  # single:
  #   test:
  #   - [ satori-cli monitor $(MONITOR_ID) ]

  # start:
  #   test:
  #   - [ satori-cli monitor $(MONITOR_ID) start ]

  # stop:
  #   test:
  #   - [ satori-cli monitor $(MONITOR_ID) stop ]

  # delete:
  #   test:
  #   - [ satori-cli monitor $(MONITOR_ID) delete ]

teams:
  assertReturnCode: 0
  list:
    test:
    - [ satori-cli team ]

  # create:
  #   test:
  #   - [ satori-cli team $(TEAM_ID) create ]

  # single:
  #   test:
  #   - [ satori-cli team $(TEAM_ID) ]

  # members:
  #   test:
  #   - [ satori-cli team $(TEAM_ID) members ]

  # add_member:
  #   test:
  #   - [ satori-cli team $(TEAM_ID) add_member --email="user@email.com" ]

  # repos:
  #   test:
  #   - [ satori-cli team $(TEAM_ID) repos ]

  # add_repo:
  #   test:
  #   - [ satori-cli team $(TEAM_ID) add_repo --repo="non/repo" ]

  # delete:
  #   test:
  #   - [ satori-cli team $(TEAM_ID) delete" ]

tests_fail:
  assertReturnCode: 1
  fail:
    test:
    - [ satori-cli run .satori/fail.yml --report ]

  empty:
    test:
    - [ satori-cli run .satori/empty.yml --report ]